extends ../page-layout.pug

block page
  h2 CCS 原理
  p
    | css-components 和你正在看的
    a.link(href='./' download='ccs-tutorial') 这个网页
    | 都没有半句 js。
    | 如果说 css-components 这个库，不使用 js 是为了防止 ui 逻辑入侵业务逻辑，
    | 那么这个网页不使用 js 则纯属一种实验：验证一下不用 js 能做出什么效果。
    | 我的结论是：没有 js 绝对不行；但是，仅 css 和 html 也可以做出有趣的东西。
  p （这个网站虽然没有直接使用 js，但使用了 Nodejs 进行辅助处理）
  p 这里分享一下这个项目给我的经验。

  h3 数据存在哪？
  p
    | css 是有变量的，但是 css 不能修改变量的值。
    | 这里是用 html 保存数据的。
    | <label>checkbox <input type="checkbox"></label>
    | 和
    | <label>radio <input type="radio"></label>
    | 都可以保存状态。
  
  p 比如，你可以用 checkbox 保存“打开”与“关闭”的状态。

  p 或者，你的状态比较复杂，可以使用 radio，比如：
  ul
    li= '<input type="radio" name="xxx" value="1">'
    li= '<input type="radio" name="xxx" value="2">'
    li= '<input type="radio" name="xxx" value="3">'
  p 来记录三种状态。

  p 如果你不喜欢太多 radio，也可以这样：
  ul
    li= '<input type="checkbox" name="x">'
    li= '<input type="checkbox" name="y">'
  p 组合一下，两个 checkbox 可以记录 4 种状态：
  ul
    li x 为 1，y 为 1
    li x 为 1，y 为 0
    li x 为 0，y 为 1
    li x 为 0，y 为 0
  p 一个 checkbox 不就是一个 bit 嘛~

  h3 数据变化时，怎么响应的？
  p 答：使用选择器。
  p 看下面的例子：
  pre
    code= config.code.event
  p
    | 这段 css 表达了一个“类似事件触发”的逻辑：
    | 当 checkbox 未 check 时，后面的 div 宽度设为 0；
    | 当 checkbox 已 check 时，后面的 div 宽度设为 100px。
  
  p
    | 上面是响应事件的“原理”。
    | 但实际使用时，这些“事件触发”经常会“误伤”到不相干的元素。
    | 这就要求使用者，要对 css 选择器有较高的熟悉程度。
    | 其中 :has 选择器、:nth-child 选择器（对元素结构有要求时）、直接子元素选择器、下一个兄弟元素选择器，非常有用。
  
  h3 自定义参数？
  p TODO

  h3 亮暗模式？
  p css 有个“媒体查询”是这样用的：（下面是真正的 css 代码，不是 less 或 scss）
  pre
    code= config.code.media
  p ：系统切换成暗模式时，所有 div 的 color 设为 green。